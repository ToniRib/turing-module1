# Toni Rib - M1 Portfolio

## Individual

### Your Mission

(What did you set out to accomplish this module?)

### End of Module Assessment

(Notes & scores from your assessment rubric)

### Attendance

Left at 2pm on Friday, October 23rd because I was sick.

### Work

(Intro)

#### Sorting Suite

* [GitHub URL](https://github.com/ToniRib/sorting-suite)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/sorting_suite.markdown)

(description)

Reviewed by Beth Secor

__Comments:__

1. Bubble sort
  * easy to read, simple implementation
  * tests pass, edge cases tested

2. Insertion sort
  * could be a bit easier to read, with loops and breaks.

3. Merge sort
  * beautifully written, simple implementation
  * tests pass, edge cases tested

4. All extras work, tests pass

__Scores:__

* Functional expectations: 4
* Testing: 4
* Ruby Style: 3
* Organization: 4

#### Night Writer

* [GitHub URL](https://github.com/ToniRib/night-writer)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/night_writer.markdown)

(description)

Reviewed by Jeff

__Comments:__

__Scores:__

#### Binary Search Tree

* [GitHub URL](https://github.com/ToniRib/binary-search-tree)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/binary_search_tree.markdown)

(description)

Reviewed by Mike Dao

__Comments:__

* 127 tests, all pass.
* All extensions
* Code checks for data type and will only allow trees of matching types to be created.
* Good use of recursion
* Well tested, good, thorough tests, would like to have seen more sad path testing.
* Excellent use of exceptions

__Scores:__

* Functional Expectations: 4
* Test-Driven Development: 3
* Encapsulation / Breaking Logic into Components: 4
* Fundamental Ruby & Style: 4
* Enumerable & Collections: 3

#### Complete Me

* [GitHub URL](https://github.com/ToniRib/Complete_Me)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/complete_me.markdown)

Reviewed by Horace

(description)

__Comments:__

* Nice work with the shoes; other base functionality also working good
* Added the inclusive fuzzy search as well
* Fancy error handling on various inputs
* Overall method tidyness and conciseness is strong
* General enumerable usage is solid; handful of cases where multiple different enumerables might be able to be consolidated

__Scores:__

* Functional Expectations: 4
* TDD: 4
* Ruby Style & Fundamentals: 4
* Encapsulation / Breaking Logic Into Components: 4
* Enumerable & Collections: 3

## Team

### Projects

(Intro)

#### HTTP, Yeah You Know Me

* [GitHub URL](https://github.com/ToniRib/http_yeah_you_know_me)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/http_yeah_you_know_me.markdown)

Project with Hector Huertas

Reviewed by Mike Dao

(description)

__Comments:__

* 62 tests, all pass.
* One extension
* All functionality works.
* Well organized, code, things were broken out into separate methods in a good fashion.
* Think about class methods, and modules.

__Scores:__

* Overall Functionality: 4
* Fundamental Ruby & Style: 4
* Test-Driven Development: 3
* Breaking Logic into Components: 4

(feedback to me)

#### Headcount

* [GitHub URL](https://github.com/ToniRib/heacount)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/headcount.markdown)

Project with Aaron Greenspan

Reviewed by

(description)

__Comments:__

__Scores:__

(feedback to me)

## Community

### Giving Feedback

(feedback from me)

### Being a Community Member

(feedback to me)

### Playing a Part

* made coffee 3 times throughout the module when it was empty
* helped various people in module 1 with debugging when they were stuck
* organized a 1510 happy hour after turing in our first Project
* went to an LGBTuring lunch
* went to Hamburger Mary's with the LGBTuring group

## Review

### Notes

( Leave blanks for reviewers )

### Outcome

( Leave blanks for reviewers )
